library(Rglpk);
install.packages("Rglpk")
install.packages("glpkAPI")
install.packages("xlsx")
library(Rglpk);
library(glpkAPI);
library(xlsx)
library(Rglpk);
library(glpkAPI);
library(xlsx)
library(glpkAPI);
library(xlsx)
library(xlsx)
source("Utilitarios.R")
library(Rglpk);
library(glpkAPI);
library(xlsx)
source("Utilitarios.R")
source("/Utilitarios.R")
satGlobal <- read.xlsx(F_XlsDatosEncuestas, paste0("SatisfaccionGlobal",dmu))
setwd("./")
pathActual <- getwd()
pathDatos <- file.path(pathActual,"Data1")
pathModelos <- pathActual
pathResultados <- file.path("c:","temp")   # tempdir()
pathTempDatos <- file.path(pathResultados,"SalidasLM")
PathGraficas <- file.path(pathResultados,"Graficas")
F_XlsDatosEncuestas<- file.path(pathDatos,"SatisfacciÃ³nRtasFundamentos.xlsx")
F_ModMusaGen <- file.path(pathModelos,"LPFase1.mod")
F_ModPostOptimo <- file.path(pathModelos,"LPFasePostOpt.mod")
F_ParamMusaGen<- file.path(pathTempDatos,"ParamModeloMusa.dat")
F_ModPostOptimo <- file.path(pathModelos,"LPFasePostOpt.mod")
F_ParamMusaGen<- file.path(pathTempDatos,"ParamModeloMusaa.dat")
F_ParamMusaGen<- file.path(pathTempDatos,"ParamModeloMusa.dat")
resumenResultadosIndiceTotal<-list()
indicesAFI<-vector()
indicesASI<-vector()
sucursales<-1
dmu <-1
unlink(pathResultados, recursive = TRUE)
dir.create(paste0(pathResultados))
dir.create(paste0(PathGraficas,dmu))
dir.create(pathTempDatos)
source("Fase1.R")
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos1",dmu))
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
F_XlsDatosEncuestas<- file.path(pathDatos,"SatisfacciónRtasFundamentos.xlsx")
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
setwd("./")
pathActual <- 'C:\Users\Dr Francisco\Desktop\RMusa'
setwd("./")
pathActual <- C:\Users\Dr Francisco\Desktop\RMusa
setwd("./")
pathActual <- "C:\Users\Dr Francisco\Desktop\RMusa"
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
datos <- read.xlsx("C:\Users\Dr Francisco\Desktop\RMusa\RMusa", paste0("Datos",dmu))
datos <- read.xlsx("\Users\Dr Francisco\Desktop\RMusa\RMusa", paste0("Datos",dmu))
datos <- read.xlsx("\Users\Dr Francisco\Desktop\RMusa\RMusa", paste0("Datos",dmu))
datos <- read.xlsx("C:/Users/Dr Francisco/Desktop/RMusa/RMusa", paste0("Datos",dmu))
datos <- read.xlsx("C:/Users/Dr Francisco/Desktop/RMusa", paste0("Datos",dmu))
datos <- read.xlsx("C:/Users/Dr Francisco/Desktop/RMusa", paste0("Datos1",dmu))
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
setwd("./")
pathActual <- "C:/Users/Dr Francisco/Desktop\RMusa"
pathActual <- "C:/Users/Dr Francisco/Desktop/RMusa"
pathDatos <- file.path(pathActual,"Data1")
pathModelos <- pathActual
pathResultados <- file.path("c:","temp")   # tempdir()
pathTempDatos <- file.path(pathResultados,"SalidasLM")
PathGraficas <- file.path(pathResultados,"Graficas")
F_XlsDatosEncuestas<- file.path(pathDatos,"SatisfacciÃ³nRtasFundamentos.xlsx")
F_ModMusaGen <- file.path(pathModelos,"LPFase1.mod")
F_ModPostOptimo <- file.path(pathModelos,"LPFasePostOpt.mod")
F_ParamMusaGen<- file.path(pathTempDatos,"ParamModeloMusa.dat")
resumenResultadosIndiceTotal<-list()
indicesAFI<-vector()
indicesASI<-vector()
sucursales<-1
dmu <-1
unlink(pathResultados, recursive = TRUE)
dir.create(paste0(pathResultados))
dir.create(paste0(PathGraficas,dmu))
dir.create(pathTempDatos)
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
\RMusa
pathActual <- "C:/Users/Dr Francisco/Desktop/RMusa/RMusa"
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
pathActual <- "C:/Users/Dr Francisco/Desktop/RMusa/RMusa"
pathDatos <- file.path(pathActual,"Data1")
pathModelos <- pathActual
pathResultados <- file.path("c:","temp")   # tempdir()
pathTempDatos <- file.path(pathResultados,"SalidasLM")
PathGraficas <- file.path(pathResultados,"Graficas")
F_XlsDatosEncuestas<- file.path(pathDatos,"SatisfacciÃ³nRtasFundamentos.xlsx")
F_ModMusaGen <- file.path(pathModelos,"LPFase1.mod")
F_ModPostOptimo <- file.path(pathModelos,"LPFasePostOpt.mod")
F_ParamMusaGen<- file.path(pathTempDatos,"ParamModeloMusa.dat")
resumenResultadosIndiceTotal<-list()
indicesAFI<-vector()
indicesASI<-vector()
sucursales<-1
dmu <-1
unlink(pathResultados, recursive = TRUE)
dir.create(paste0(pathResultados))
dir.create(paste0(PathGraficas,dmu))
dir.create(pathTempDatos)
source("Fase1.R")
source("Fase2.R")
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
F_XlsDatosEncuestas<- file.path(pathDatos,"SatisfacciónRtasFundamentos.xlsx")
F_ModMusaGen <- file.path(pathModelos,"LPFase1.mod")
F_ModPostOptimo <- file.path(pathModelos,"LPFasePostOpt.mod")
F_ParamMusaGen<- file.path(pathTempDatos,"ParamModeloMusa.dat")
resumenResultadosIndiceTotal<-list()
indicesAFI<-vector()
indicesASI<-vector()
sucursales<-1
dmu <-1
unlink(pathResultados, recursive = TRUE)
dir.create(paste0(pathResultados))
dir.create(paste0(PathGraficas,dmu))
dir.create(pathTempDatos)
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
write.csv(file=file.path(pathTempDatos,"datos.csv"), x=datos, row.names = F, quote = FALSE)
listParam <- crearFileParametros(file.path(pathTempDatos,"datos.csv"), F_ParamMusaGen)
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
write.csv(file=file.path(pathTempDatos,"datos.csv"), x=datos, row.names = F, quote = FALSE)
listParam <- crearFileParametros(file.path(pathTempDatos,"datos.csv"), F_ParamMusaGen)
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
write.csv(file=file.path(pathTempDatos,"datos.csv"), x=datos, row.names = F, quote = FALSE)
listParam <- crearFileParametros(file.path(pathTempDatos,"datos.csv"), F_ParamMusaGen)
library(glpkAPI)
solveGlpkModelMusaFase <- function (fileModelo, fileParametros, pathData)
{
#set a directory
pathActual <- getwd()
setwd(pathData)  #lugar donde estÃ¡n los datos a analizar
#Allocate workspace
workspace<- initProbGLPK();
#give a name
setProbNameGLPK(workspace, "MusaModel");
# Allocate space
a<- mplAllocWkspGLPK();
# Read glpk model
model <- mplReadModelGLPK(a, fileModelo, skip=1);
# Read data
data<-mplReadDataGLPK(a, fileParametros)
# Generate the model
result<- mplGenerateGLPK(a);
# Build the problem object using result
result <- mplBuildProbGLPK(a, workspace)
# Number of constraints(including objective function)
numrows <- getNumRowsGLPK(workspace)
# Solve the model
return <- solveSimplexGLPK(workspace)
#PostSolve the model
return <- mplPostsolveGLPK(a, workspace, GLP_PRIMAL);
# Get solutions
fobj<-getRowPrimGLPK (workspace,1)
#Funci?n objetivo Minimizaci?n de la suma de los errores absolutos
# Free the workspace
mplFreeWkspGLPK(a)
delProbGLPK(workspace)
setwd(pathActual)
return(fobj)
}
crearFileParametros <- function (fileDatosIn, fileParametrosOut)
{
datos <- read.csv(fileDatosIn)
listParam <- list(
clientes = datos[1,2], #numero de clientes encuestados
criterios= datos[2,2], #numero de criterios de satisfaccion
alfa = datos[3,2], #Nivel de satisfacci?n global
alfaI= datos[4,2], #Nivel de satisfacci?n parcial Criterios
alfaIJ=datos[5,2], #Nivel de satisfacci?n parcial subcriterios
thr=datos[6,2], #Threshold global (Umbral de preferencia)
thrCriterio=datos[7,2], #Threshold Parcial (Umbral de preferencia criterios)
thrSubcriterio=datos[8,2], #Threshold Parcial (Umbral de preferencia subcriterios)
e = datos[9,2]  #par?metro de Error para definir el espacio de b?squeda del heur?stico en la fase 2 de estabilidad.
)
# Escribir a archivo de parametros
cat("/*Data del modelo .mod*/ \n data; \n", file= fileParametrosOut, append=FALSE)
cat("   param alfa:=",listParam$alfa,";", "\n", file=fileParametrosOut, append=TRUE)
cat("   param alfaI:=",listParam$alfaI,";", "\n", file=fileParametrosOut, append=TRUE)
cat("   param alfaIJ:=",listParam$alfaIJ,";", "\n", file=fileParametrosOut, append=TRUE)
cat("   param thr:=",listParam$thr,";", "\n", file=fileParametrosOut, append=TRUE)
cat("   param thrCriterio:=",listParam$thrCriterio,";", "\n", file=fileParametrosOut, append=TRUE)
cat("   param thrSubcriterio:=",listParam$thrSubcriterio,";", "\n", file=fileParametrosOut, append=TRUE)
cat(" end;", "\n", file=fileParametrosOut, append=TRUE)
return(listParam)
}
listParam <- crearFileParametros(file.path(pathTempDatos,"datos.csv"), F_ParamMusaGen)
satGlobal <- read.xlsx(F_XlsDatosEncuestas, paste0("SatisfaccionGlobal",dmu))
satCriterios <- read.xlsx(F_XlsDatosEncuestas, paste0("SatisfaccionCriterios",dmu)) # read a sheet
satSubcriterios <- read.xlsx(F_XlsDatosEncuestas, paste0("SatisfaccionSubcriterios",dmu))
subcriterios <- read.xlsx(F_XlsDatosEncuestas, "Subcriterios")
names(satGlobal) <- c("CLIENTES","satGlobal")
names(satCriterios) <- c("CLIENTES","CRITERIOS","satCriterios")
names(satSubcriterios) <- c("CLIENTES","CRITERIOS","SUBCRITERIOS","satSubcriterios")
names(subcriterios) <- c("CRITERIOS","subcriterios")
write.csv(file=file.path(pathTempDatos,"satCriterios.csv"), x=satCriterios, row.names = F, quote = FALSE)
write.csv(file=file.path(pathTempDatos,"satGlobal.csv"), x=satGlobal, row.names = F, quote = FALSE)
write.csv(file=file.path(pathTempDatos,"satSubcriterios.csv"), x=satSubcriterios, row.names = F, quote = FALSE)
write.csv(file=file.path(pathTempDatos,"subcriterios.csv"), x=subcriterios, row.names = F, quote = FALSE)
View(satCriterios)
View(satCriterios)
View(datos)
View(satCriterios)
View(satGlobal)
View(satSubcriterios)
View(subcriterios)
error <- solveGlpkModelMusaFase(F_ModMusaGen , F_ParamMusaGen, pathTempDatos)
resultadoBi <- read.csv(paste0(pathTempDatos,"./resultadoBi.csv"),header = TRUE, sep = ",",dec = ".")
resultadoBij<-  read.csv(paste0(pathTempDatos,"/resultadoBij.csv"),header = TRUE, sep = ",",dec = ".")
resultadoXi <- read.csv(paste0(pathTempDatos,"/resultadoXi.csv"),header = TRUE, sep = ",",dec = ".")
resultadoXij<-  read.csv(paste0(pathTempDatos,"/resultadoXij.csv"),header = TRUE, sep = ",",dec = ".")
resultadoY<-  read.csv(paste0(pathTempDatos,"/resultadoY.csv"),header = TRUE, sep = ",",dec = ".")
print("fin fase 1")
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
write.csv(file=file.path(pathTempDatos,"datos.csv"), x=datos, row.names = F, quote = FALSE)
listParam <- crearFileParametros(file.path(pathTempDatos,"datos.csv"), F_ParamMusaGen)
satGlobal <- read.xlsx(F_XlsDatosEncuestas, paste0("SatisfaccionGlobal",dmu))
satCriterios <- read.xlsx(F_XlsDatosEncuestas, paste0("SatisfaccionCriterios",dmu)) # read a sheet
satSubcriterios <- read.xlsx(F_XlsDatosEncuestas, paste0("SatisfaccionSubcriterios",dmu))
subcriterios <- read.xlsx(F_XlsDatosEncuestas, "Subcriterios")
names(satGlobal) <- c("CLIENTES","satGlobal")
names(satCriterios) <- c("CLIENTES","CRITERIOS","satCriterios")
names(satSubcriterios) <- c("CLIENTES","CRITERIOS","SUBCRITERIOS","satSubcriterios")
names(subcriterios) <- c("CRITERIOS","subcriterios")
write.csv(file=file.path(pathTempDatos,"satCriterios.csv"), x=satCriterios, row.names = F, quote = FALSE)
write.csv(file=file.path(pathTempDatos,"satGlobal.csv"), x=satGlobal, row.names = F, quote = FALSE)
write.csv(file=file.path(pathTempDatos,"satSubcriterios.csv"), x=satSubcriterios, row.names = F, quote = FALSE)
write.csv(file=file.path(pathTempDatos,"subcriterios.csv"), x=subcriterios, row.names = F, quote = FALSE)
error <- solveGlpkModelMusaFase(F_ModMusaGen , F_ParamMusaGen, pathTempDatos)
datos <- read.xlsx(F_XlsDatosEncuestas, paste0("Datos",dmu))
write.csv(file=file.path(pathTempDatos,"datos.csv"), x=datos, row.names = F, quote = FALSE)
listParam <- crearFileParametros(file.path(pathTempDatos,"datos.csv"), F_ParamMusaGen)
satGlobal <- read.xlsx(F_XlsDatosEncuestas, paste0("SatisfaccionGlobal",dmu))
satCriterios <- read.xlsx(F_XlsDatosEncuestas, paste0("SatisfaccionCriterios",dmu)) # read a sheet
satSubcriterios <- read.xlsx(F_XlsDatosEncuestas, paste0("SatisfaccionSubcriterios",dmu))
subcriterios <- read.xlsx(F_XlsDatosEncuestas, "Subcriterios")
names(satGlobal) <- c("CLIENTES","satGlobal")
names(satCriterios) <- c("CLIENTES","CRITERIOS","satCriterios")
names(satSubcriterios) <- c("CLIENTES","CRITERIOS","SUBCRITERIOS","satSubcriterios")
names(subcriterios) <- c("CRITERIOS","subcriterios")
write.csv(file=file.path(pathTempDatos,"satCriterios.csv"), x=satCriterios, row.names = F, quote = FALSE)
write.csv(file=file.path(pathTempDatos,"satGlobal.csv"), x=satGlobal, row.names = F, quote = FALSE)
write.csv(file=file.path(pathTempDatos,"satSubcriterios.csv"), x=satSubcriterios, row.names = F, quote = FALSE)
write.csv(file=file.path(pathTempDatos,"subcriterios.csv"), x=subcriterios, row.names = F, quote = FALSE)
ls
Rscript ?
library(Rglpk);
library(glpkAPI);
library(xlsx)
getwd()
pathActual <- getwd()
getwd()
library(Rglpk);
library(glpkAPI);
library(xlsx)
pathActual <- setwd("C:/Users/Dr Francisco/Desktop/servidor/RMusa")
setwd("C:/Users/Dr Francisco/Desktop/servidor/RMusa")
pathDatos <- file.path(pathActual,"Data1")
pathModelos <- pathActual
pathResultados <- file.path("c:","temp")   # tempdir()
pathTempDatos <- file.path(pathResultados,"SalidasLM")
PathGraficas <- file.path(pathResultados,"Graficas")
F_ModMusaGen <- file.path(pathModelos,"LPFase1.mod")
F_XlsDatosEncuestas<- file.path(pathDatos,"SatisfacciónRtasFundamentos.xlsx")
F_ModPostOptimo <- file.path(pathModelos,"LPFasePostOpt.mod")
F_ParamMusaGen<- file.path(pathTempDatos,"ParamModeloMusa.dat")
resumenResultadosIndiceTotal<-list()
indicesAFI<-vector()
indicesASI<-vector()
sucursales<-1
dmu <-1
unlink(pathResultados, recursive = TRUE)
dir.create(paste0(pathResultados))
dir.create(paste0(PathGraficas,dmu))
dir.create(pathTempDatos)
source("Utilitarios.R")
source("Fase1.R")
library(Rglpk);
library(glpkAPI);
library(xlsx)
setwd("C:/Users/Dr Francisco/Desktop/servidor/RMusa")
setwd("C:/Users/Dr Francisco/Desktop/servidor/RMusa")
library(Rglpk);
library(glpkAPI);
library(xlsx)
setwd("C:/Users/Dr Francisco/Desktop/tesisIIND/servidor/RMusa")
pathActual <- setwd("C:/Users/Dr Francisco/Desktop/tesisIIND/servidor/RMusa")
pathDatos <- file.path(pathActual,"Data1")
pathModelos <- pathActual
pathResultados <- file.path("c:","temp")   # tempdir()
pathTempDatos <- file.path(pathResultados,"SalidasLM")
PathGraficas <- file.path(pathResultados,"Graficas")
F_XlsDatosEncuestas<- file.path(pathDatos,"SatisfacciónRtasFundamentos.xlsx")
F_ModMusaGen <- file.path(pathModelos,"LPFase1.mod")
F_ModPostOptimo <- file.path(pathModelos,"LPFasePostOpt.mod")
F_ParamMusaGen<- file.path(pathTempDatos,"ParamModeloMusa.dat")
resumenResultadosIndiceTotal<-list()
indicesAFI<-vector()
indicesASI<-vector()
sucursales<-1
dmu <-1
dir.create(paste0(pathResultados))
dir.create(paste0(PathGraficas,dmu))
dir.create(pathTempDatos)
source("Utilitarios.R")
source("Fase1.R")
source("Fase2.R")
source("Fase3.R")
source("Fase4.R")
source("Fase5.R")
resumenResultadosIndiceTotal<-as.data.frame(resumenResultadosIndiceTotal)
for(i in 1:listParam$criterios)
{
rnames<-append(rnames,c(i)) #Agregar nombre de las filas (criterios)
}
for(i in 1:listParam$criterios)
{
for(j in 1:subcriterios$subcriterios[i])
{
rnames<-append(rnames,paste(i,",",j,sep=" ")) #Agregar nombre de las filas (subcriterios)
}
}
resumenResultadosIndiceTotal<-(cbind(rnames,resumenResultadosIndiceTotal))
resumenResulCriteriosTotal<-resumenResultadosIndiceTotal[1:listParam$criterios+1,]
satGlobalSucursales<-as.data.frame(t( resumenResultadosIndiceTotal[1,grep("Indice.Satisfaccion.S.", colnames(resumenResultadosIndiceTotal))]))
colnames(satGlobalSucursales)<-c("Indice Satisfacci?n Global")
rnames<-vector()
for(i in 1:sucursales)
{
rnames<-append(rnames,paste("Indice Satisfacci?n (",i,")",sep=" ") )
}
rownames(satGlobalSucursales)<-rnames
print(paste0("ver resultados en: ",pathResultados))
unlink(pathResultados, recursive = TRUE)
rnames<-"Global"
library(Rglpk);
library(glpkAPI);
library(xlsx)
setwd("C:/Users/Dr Francisco/Desktop/tesisIIND/servidor/RMusa")
pathActual <- setwd("C:/Users/Dr Francisco/Desktop/tesisIIND/servidor/RMusa")
pathDatos <- file.path(pathActual,"Data1")
pathModelos <- pathActual
pathResultados <- file.path("c:","temp")   # tempdir()
pathTempDatos <- file.path(pathResultados,"SalidasLM")
PathGraficas <- file.path(pathResultados,"Graficas")
F_XlsDatosEncuestas<- file.path(pathDatos,"SatisfacciónRtasFundamentos.xlsx")
F_ModMusaGen <- file.path(pathModelos,"LPFase1.mod")
F_ModPostOptimo <- file.path(pathModelos,"LPFasePostOpt.mod")
F_ParamMusaGen<- file.path(pathTempDatos,"ParamModeloMusa.dat")
resumenResultadosIndiceTotal<-list()
indicesAFI<-vector()
indicesASI<-vector()
sucursales<-1
dmu <-1
unlink(pathResultados, recursive = TRUE)
dir.create(paste0(pathResultados))
dir.create(paste0(PathGraficas,dmu))
dir.create(pathTempDatos)
source("Utilitarios.R")
source("Fase1.R")
source("Fase2.R")
source("Fase3.R")
source("Fase4.R")
source("Fase5.R")
